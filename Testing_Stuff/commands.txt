Stuff to do before being able to run:
Install openssl, pre-installed version on ubuntu 22.04 works just fine.
Build and install liboqs, follow the steps on the github page.

Set ld variable for liboqs, since we want to use the kyber implementation from there, otherwise the linker may not find it.

Build instructions for noise-c work exactly as before, some slight changes in the Makefile.am files were done to make sure of that.


Build command for the noise_c example, in the Testing_Stuff/Noise-c folder: 
Include noise_c as library, need to have it built as .a library, otherwise if built as .so then LD_LIBRARY_PATH needs to be set.
 
gcc -Wall -g noise_c_PQ_server.c -I ../../Noise_c/include/ -L ../../Noise_c/src/protocol -lnoiseprotocol -o server -loqs
gcc -Wall -g noise_c_PQ_client.c -I ../../Noise_c/include/ -L ../../Noise_c/src/protocol -lnoiseprotocol -o client -loqs
gcc -Wall -g noise_c_hybrid_server.c -I ../../Noise_c/include/ -L ../../Noise_c/src/protocol -lnoiseprotocol -o hybserver -loqs
gcc -Wall -g noise_c_hybrid_client.c -I ../../Noise_c/include/ -L ../../Noise_c/src/protocol -lnoiseprotocol -o hybclient -loqs



Setup commands to reproduce the evaluation:

Check if hyperthreading is on on linux:
cat /sys/devices/system/cpu/smt/active

Disable hyperthreading:
echo off | sudo tee /sys/devices/system/cpu/smt/control

Check whether turbo boost is enabled, command technically checks whether "not turbo" is enabled, so 0 here means turbo is on:
cat /sys/devices/system/cpu/intel_pstate/no_turbo

Disable turbo boost on linux:
echo "1" | sudo tee /sys/devices/system/cpu/intel_pstate/no_turbo

***Commands to install cpupower(if needed)***
sudo apt-get install -y linux-tools-common
sudo apt install linux-tools-common linux-tools-`uname -r`
*******

Set cpugovernor to performance to disable cpu frequency scaling:
sudo cpupower frequency-set --governor performance

Check that all of the cpus are using the performance governor:
cpupower frequency-info -o proc


!!! Information for the board:
On the board I could not manage to install cpupower instead I had to use cpufreq with the following command to set all of the cpus to performance:
sudo bash -c 'for ((i=0;i<$(nproc);i++)); do cpufreq-set -c $i -g performance; done'
We can check with the following command whether it got set correctly:
cpufreq-info

The board does not have hyperthreading or an equivalent to turbo boost.



To setup the virtual network:
Might need to install ethtool "sudo apt install ethtool"

Run namespace setup (In the folder above the client and server files):
sudo sh setup_namespaces.sh

***OPTIONAL***
Commands to run wireshark on the namespace to record traffic, when running this command srv_ns will be listed in the wireshark graphical interface, simply click it and start the capture:
sudo ip netns exec cli_ns wireshark

To change permission of the resulting .pcapng file, since it saves with root privileges due to being run as sudo, simply run:
sudo chmod 777 file_name
******

Commands to run in the namespaces:
sudo ip netns exec srv_ns taskset -c 2 nice -n -20 ./server
sudo ip netns exec cli_ns taskset -c 3 nice -n -20 ./client

taskset -c will pin the program to a given core, and sudo nice -n -20 will set the program to be highest priority (-20 to 19 with -20 being highest priority).

